/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  GeneratedPage as PrismaGeneratedPage,
  DataFile as PrismaDataFile,
} from "@prisma/client";

export class GeneratedPageServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.GeneratedPageCountArgs, "select">
  ): Promise<number> {
    return this.prisma.generatedPage.count(args);
  }

  async generatedPages(
    args: Prisma.GeneratedPageFindManyArgs
  ): Promise<PrismaGeneratedPage[]> {
    return this.prisma.generatedPage.findMany(args);
  }
  async generatedPage(
    args: Prisma.GeneratedPageFindUniqueArgs
  ): Promise<PrismaGeneratedPage | null> {
    return this.prisma.generatedPage.findUnique(args);
  }
  async createGeneratedPage(
    args: Prisma.GeneratedPageCreateArgs
  ): Promise<PrismaGeneratedPage> {
    return this.prisma.generatedPage.create(args);
  }
  async updateGeneratedPage(
    args: Prisma.GeneratedPageUpdateArgs
  ): Promise<PrismaGeneratedPage> {
    return this.prisma.generatedPage.update(args);
  }
  async deleteGeneratedPage(
    args: Prisma.GeneratedPageDeleteArgs
  ): Promise<PrismaGeneratedPage> {
    return this.prisma.generatedPage.delete(args);
  }

  async getDataFile(parentId: string): Promise<PrismaDataFile | null> {
    return this.prisma.generatedPage
      .findUnique({
        where: { id: parentId },
      })
      .dataFile();
  }
}
