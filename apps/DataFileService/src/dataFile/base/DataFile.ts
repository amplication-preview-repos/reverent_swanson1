/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { ObjectType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsDate,
  IsString,
  MaxLength,
  IsOptional,
  ValidateNested,
  IsEnum,
} from "class-validator";
import { Type } from "class-transformer";
import { GeneratedImage } from "../../generatedImage/base/GeneratedImage";
import { GeneratedPage } from "../../generatedPage/base/GeneratedPage";
import { EnumDataFileTypeField } from "./EnumDataFileTypeField";

@ObjectType()
class DataFile {
  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  createdAt!: Date;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  createdBy!: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  fileUrl!: string | null;

  @ApiProperty({
    required: false,
    type: () => [GeneratedImage],
  })
  @ValidateNested()
  @Type(() => GeneratedImage)
  @IsOptional()
  generatedImages?: Array<GeneratedImage>;

  @ApiProperty({
    required: false,
    type: () => [GeneratedPage],
  })
  @ValidateNested()
  @Type(() => GeneratedPage)
  @IsOptional()
  generatedPages?: Array<GeneratedPage>;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  id!: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name!: string | null;

  @ApiProperty({
    required: false,
    enum: EnumDataFileTypeField,
  })
  @IsEnum(EnumDataFileTypeField)
  @IsOptional()
  @Field(() => EnumDataFileTypeField, {
    nullable: true,
  })
  typeField?: "Option1" | null;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  updatedAt!: Date;
}

export { DataFile as DataFile };
