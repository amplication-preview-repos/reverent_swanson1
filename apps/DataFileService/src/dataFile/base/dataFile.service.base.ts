/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";

import {
  Prisma,
  DataFile as PrismaDataFile,
  GeneratedImage as PrismaGeneratedImage,
  GeneratedPage as PrismaGeneratedPage,
} from "@prisma/client";

export class DataFileServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.DataFileCountArgs, "select">): Promise<number> {
    return this.prisma.dataFile.count(args);
  }

  async dataFiles(
    args: Prisma.DataFileFindManyArgs
  ): Promise<PrismaDataFile[]> {
    return this.prisma.dataFile.findMany(args);
  }
  async dataFile(
    args: Prisma.DataFileFindUniqueArgs
  ): Promise<PrismaDataFile | null> {
    return this.prisma.dataFile.findUnique(args);
  }
  async createDataFile(
    args: Prisma.DataFileCreateArgs
  ): Promise<PrismaDataFile> {
    return this.prisma.dataFile.create(args);
  }
  async updateDataFile(
    args: Prisma.DataFileUpdateArgs
  ): Promise<PrismaDataFile> {
    return this.prisma.dataFile.update(args);
  }
  async deleteDataFile(
    args: Prisma.DataFileDeleteArgs
  ): Promise<PrismaDataFile> {
    return this.prisma.dataFile.delete(args);
  }

  async findGeneratedImages(
    parentId: string,
    args: Prisma.GeneratedImageFindManyArgs
  ): Promise<PrismaGeneratedImage[]> {
    return this.prisma.dataFile
      .findUniqueOrThrow({
        where: { id: parentId },
      })
      .generatedImages(args);
  }

  async findGeneratedPages(
    parentId: string,
    args: Prisma.GeneratedPageFindManyArgs
  ): Promise<PrismaGeneratedPage[]> {
    return this.prisma.dataFile
      .findUniqueOrThrow({
        where: { id: parentId },
      })
      .generatedPages(args);
  }
}
