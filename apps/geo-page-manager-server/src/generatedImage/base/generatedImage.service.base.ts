/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";

import {
  Prisma,
  GeneratedImage as PrismaGeneratedImage,
  DataFile as PrismaDataFile,
  Template as PrismaTemplate,
} from "@prisma/client";

export class GeneratedImageServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.GeneratedImageCountArgs, "select">
  ): Promise<number> {
    return this.prisma.generatedImage.count(args);
  }

  async generatedImages(
    args: Prisma.GeneratedImageFindManyArgs
  ): Promise<PrismaGeneratedImage[]> {
    return this.prisma.generatedImage.findMany(args);
  }
  async generatedImage(
    args: Prisma.GeneratedImageFindUniqueArgs
  ): Promise<PrismaGeneratedImage | null> {
    return this.prisma.generatedImage.findUnique(args);
  }
  async createGeneratedImage(
    args: Prisma.GeneratedImageCreateArgs
  ): Promise<PrismaGeneratedImage> {
    return this.prisma.generatedImage.create(args);
  }
  async updateGeneratedImage(
    args: Prisma.GeneratedImageUpdateArgs
  ): Promise<PrismaGeneratedImage> {
    return this.prisma.generatedImage.update(args);
  }
  async deleteGeneratedImage(
    args: Prisma.GeneratedImageDeleteArgs
  ): Promise<PrismaGeneratedImage> {
    return this.prisma.generatedImage.delete(args);
  }

  async getDataFile(parentId: string): Promise<PrismaDataFile | null> {
    return this.prisma.generatedImage
      .findUnique({
        where: { id: parentId },
      })
      .dataFile();
  }

  async getTemplate(parentId: string): Promise<PrismaTemplate | null> {
    return this.prisma.generatedImage
      .findUnique({
        where: { id: parentId },
      })
      .template();
  }
}
